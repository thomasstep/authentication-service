version: 0.2

env:
  variables:
    SIGNUP_ROUTE: "v1/signup"
    VERIFY_ROUTE: "v1/verify"
    SIGNIN_ROUTE: "v1/signin"
    SIGNOUT_ROUTE: "v1/signout"
    RESET_PASSWORD_ROUTE: "v1/reset-password"
    RESET_PASSWORD_SEND_EMAIL_ROUTE: "v1/reset-password/send-email"
    SOURCE_BUCKET_NAME: "source-bucket-s3bucket-1e6txaiywjvno"
    SIGNUP_SOURCE_KEY: "green-things-auth/v1/signup"
    VERIFY_SOURCE_KEY: "green-things-auth/v1/verify"
    SIGNIN_SOURCE_KEY: "green-things-auth/v1/signin"
    SIGNOUT_SOURCE_KEY: "green-things-auth/v1/signout"
    RESET_PASSWORD_SOURCE_KEY: "green-things-auth/v1/reset-password"
    RESET_PASSWORD_SEND_EMAIL_SOURCE_KEY: "green-things-auth/v1/reset-password-send-email"
    TEMPLATE_PATH: "infrastructure/api.yml"
    STACK_NAME: "green-things-auth"
    SIGNUP_PARAMETER_NAME: "V1SignupSourceVersion"
    VERIFY_PARAMETER_NAME: "V1VerifySourceVersion"
    SIGNIN_PARAMETER_NAME: "V1SigninSourceVersion"
    SIGNOUT_PARAMETER_NAME: "V1SignoutSourceVersion"
    RESET_PASSWORD_PARAMETER_NAME: "V1ResetPasswordSourceVersion"
    RESET_PASSWORD_SEND_EMAIL_PARAMETER_NAME: "V1ResetPasswordEmailSourceVersion"
    # NOTE if you change the key names, they also need to be changed in constants.js
    PRIVATE_KEY_S3_PATH: "green-things-auth/authentication-service.key"
    PRIVATE_KEY_NAME: "authentication-service.key"
    PUBLIC_KEY_S3_PATH: "green-things-auth/authentication-service.key.pub"
    PUBLIC_KEY_NAME: "authentication-service.key.pub"

phases:
  install:
    commands:
      - ls
      - cd $CODEBUILD_SRC_DIR/src/utils/database
      - npm install > /dev/null
      - cd $CODEBUILD_SRC_DIR/src/$SIGNUP_ROUTE
      - npm install > /dev/null
      - cd $CODEBUILD_SRC_DIR/src/$VERIFY_ROUTE
      - npm install > /dev/null
      - cd $CODEBUILD_SRC_DIR/src/$SIGNIN_ROUTE
      - npm install > /dev/null
      - cd $CODEBUILD_SRC_DIR/src/v1/signout
      - npm install > /dev/null
      - cd $CODEBUILD_SRC_DIR/src/v1/reset-password
      - npm install > /dev/null
      - cd $CODEBUILD_SRC_DIR/src/v1/reset-password/send-email
      - npm install > /dev/null
  build:
    commands:
      - cd $CODEBUILD_SRC_DIR
#
# Signup
#
      - mkdir ./node_modules
      - rsync -a ./src/$SIGNUP_ROUTE/node_modules/ ./node_modules > /dev/null
      - rsync -a ./src/utils/node_modules/ ./node_modules > /dev/null
      - zip -r9 deployment-package ./src/$SIGNUP_ROUTE/index.js ./node_modules ./src/utils > /dev/null
      - aws s3 cp deployment-package.zip s3://$SOURCE_BUCKET_NAME/$SIGNUP_SOURCE_KEY > /dev/null
      - SIGNUP_S3_VERSION=$(aws s3api get-object --bucket $SOURCE_BUCKET_NAME --key $SIGNUP_SOURCE_KEY getobjectoutfile | jq -r '.VersionId')
      - rm -rf ./node_modules
      - rm deployment-package.zip
#
# Verify
#
      - mkdir ./node_modules
      # TODO uncomment following line if/when verify route has node_modules
      #- rsync -a ./src/$VERIFY_ROUTE/node_modules/ ./node_modules > /dev/null
      - rsync -a ./src/utils/node_modules/ ./node_modules > /dev/null
      - zip -r9 deployment-package ./src/$VERIFY_ROUTE/index.js ./node_modules ./src/utils > /dev/null
      - aws s3 cp deployment-package.zip s3://$SOURCE_BUCKET_NAME/$VERIFY_SOURCE_KEY > /dev/null
      - VERIFY_S3_VERSION=$(aws s3api get-object --bucket $SOURCE_BUCKET_NAME --key $VERIFY_SOURCE_KEY getobjectoutfile | jq -r '.VersionId')
      - rm -rf ./node_modules
      - rm deployment-package.zip
#
# Signin
#
      - mkdir ./node_modules
      - rsync -a ./src/$SIGNIN_ROUTE/node_modules/ ./node_modules > /dev/null
      - rsync -a ./src/utils/node_modules/ ./node_modules > /dev/null
      # NOTE this is an important step for adding keys to the API routes that require them as a file
      - aws s3 cp s3://$SOURCE_BUCKET_NAME/$PRIVATE_KEY_S3_PATH ./src/$SIGNIN_ROUTE/$PRIVATE_KEY_NAME
      - zip -r9 deployment-package ./src/$SIGNIN_ROUTE/index.js ./src/$SIGNIN_ROUTE/$PRIVATE_KEY_NAME ./node_modules ./src/utils > /dev/null
      - aws s3 cp deployment-package.zip s3://$SOURCE_BUCKET_NAME/$SIGNIN_SOURCE_KEY > /dev/null
      - SIGNIN_S3_VERSION=$(aws s3api get-object --bucket $SOURCE_BUCKET_NAME --key $SIGNIN_SOURCE_KEY getobjectoutfile | jq -r '.VersionId')
      - rm -rf ./node_modules
      - rm deployment-package.zip
#
# Signout
#
      - mkdir ./node_modules
      # TODO uncomment following line if/when verify route has node_modules
      #- rsync -a ./src/$SIGNOUT_ROUTE/node_modules/ ./node_modules > /dev/null
      - rsync -a ./src/utils/node_modules/ ./node_modules > /dev/null
      - zip -r9 deployment-package ./src/$SIGNOUT_ROUTE/index.js ./node_modules ./src/utils > /dev/null
      - aws s3 cp deployment-package.zip s3://$SOURCE_BUCKET_NAME/$SIGNOUT_SOURCE_KEY > /dev/null
      - SIGNOUT_S3_VERSION=$(aws s3api get-object --bucket $SOURCE_BUCKET_NAME --key $SIGNOUT_SOURCE_KEY getobjectoutfile | jq -r '.VersionId')
      - rm -rf ./node_modules
      - rm deployment-package.zip
#
# Reset Password
#
      - mkdir ./node_modules
      # TODO uncomment following line if/when verify route has node_modules
      #- rsync -a ./src/$RESET_PASSWORD_ROUTE/node_modules/ ./node_modules > /dev/null
      - rsync -a ./src/utils/node_modules/ ./node_modules > /dev/null
      - zip -r9 deployment-package ./src/$RESET_PASSWORD_ROUTE/index.js ./node_modules ./src/utils > /dev/null
      - aws s3 cp deployment-package.zip s3://$SOURCE_BUCKET_NAME/$RESET_PASSWORD_SOURCE_KEY > /dev/null
      - RESET_PASSWORD_S3_VERSION=$(aws s3api get-object --bucket $SOURCE_BUCKET_NAME --key $RESET_PASSWORD_SOURCE_KEY getobjectoutfile | jq -r '.VersionId')
      - rm -rf ./node_modules
      - rm deployment-package.zip
#
# Reset Password Send Email
#
      - mkdir ./node_modules
      # TODO uncomment following line if/when verify route has node_modules
      #- rsync -a ./src/$RESET_PASSWORD_SEND_EMAIL_ROUTE/node_modules/ ./node_modules > /dev/null
      - rsync -a ./src/utils/node_modules/ ./node_modules > /dev/null
      - zip -r9 deployment-package ./src/$RESET_PASSWORD_SEND_EMAIL_ROUTE/index.js ./node_modules ./src/utils > /dev/null
      - aws s3 cp deployment-package.zip s3://$SOURCE_BUCKET_NAME/$RESET_PASSWORD_SEND_EMAIL_SOURCE_KEY > /dev/null
      - RESET_PASSWORD_SEND_EMAIL_S3_VERSION=$(aws s3api get-object --bucket $SOURCE_BUCKET_NAME --key $RESET_PASSWORD_SEND_EMAIL_SOURCE_KEY getobjectoutfile | jq -r '.VersionId')
      - rm -rf ./node_modules
      - rm deployment-package.zip
  post_build:
    commands:
      - echo $SIGNUP_S3_VERSION
      - echo $VERIFY_S3_VERSION
      - echo $SIGNIN_S3_VERSION
      - echo $SIGNOUT_S3_VERSION
      - echo $RESET_PASSWORD_S3_VERSION
      - echo $RESET_PASSWORD_SEND_EMAIL_S3_VERSION
      - aws cloudformation deploy --template-file $CODEBUILD_SRC_DIR/$TEMPLATE_PATH --stack-name $STACK_NAME --capabilities CAPABILITY_NAMED_IAM --parameter-overrides $SIGNUP_PARAMETER_NAME=$SIGNUP_S3_VERSION $VERIFY_PARAMETER_NAME=$VERIFY_S3_VERSION $SIGNIN_PARAMETER_NAME=$SIGNIN_S3_VERSION $SIGNOUT_PARAMETER_NAME=$SIGNOUT_S3_VERSION $RESET_PASSWORD_PARAMETER_NAME=$RESET_PASSWORD_S3_VERSION $RESET_PASSWORD_SEND_EMAIL_PARAMETER_NAME=$RESET_PASSWORD_SEND_EMAIL_S3_VERSION
